/*
 * Production configuration for clinical environment
 */

process {
    executor = 'slurm'
    
    // Use production containers with fixed revisions
    container = 'clinical-pipeline:production'
    
    // Increase resources for production
    cpus = { check_max(1.5 * task.attempt, 'cpus') }
    memory = { check_max(4.GB * task.attempt, 'memory') }
    time = { check_max(4.h * task.attempt, 'time') }
    
    // Add environment module paths for institutional resources
    module = ['samtools/1.15', 'gatk/4.3.0', 'bcftools/1.15']
    
    // Production-specific retry settings
    errorStrategy = { task.exitStatus in [1,143,137,104,134,139,140] ? 'retry' : 'finish' }
    maxRetries = 3
    maxErrors = '-1'
}

// Production-specific parameters
params {
    // Enable compliance features
    phi_handling = 'encrypted'
    audit_trail = true
    version_tracking = true
    
    // Production reference paths
    genome = '/references/production/GRCh38/genome.fa'
    
    // Enable notifications
    email = 'pipeline-alerts@example.org'
    
    // Additional resources
    max_cpus = 64
    max_memory = 256.GB
    max_time = 120.h
}

// Enable notifications for pipeline events
notification {
    enabled = true
    to = params.email
    from = 'noreply@example.org'
}

// Ensure reproducibility in production
docker {
    enabled = true
    fixRevision = true
    runOptions = '-u $(id -u):$(id -g) --security-opt label=disable'
    temp = 'auto'
}

// Store execution reports in a central location
report {
    enabled = true
    file = "${params.output}/pipeline_info/execution_report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.output}/pipeline_info/execution_timeline.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.output}/pipeline_info/execution_trace.txt"
    overwrite = true
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem'
} 